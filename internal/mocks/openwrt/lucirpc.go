// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/renanqts/openwrt-sdk/pkg/openwrt (interfaces: LuciRPC)
//
// Generated by this command:
//
//	mockgen -destination=../../internal/mocks/openwrt/lucirpc.go -package=mocks . LuciRPC
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockLuciRPC is a mock of LuciRPC interface.
type MockLuciRPC struct {
	ctrl     *gomock.Controller
	recorder *MockLuciRPCMockRecorder
	isgomock struct{}
}

// MockLuciRPCMockRecorder is the mock recorder for MockLuciRPC.
type MockLuciRPCMockRecorder struct {
	mock *MockLuciRPC
}

// NewMockLuciRPC creates a new mock instance.
func NewMockLuciRPC(ctrl *gomock.Controller) *MockLuciRPC {
	mock := &MockLuciRPC{ctrl: ctrl}
	mock.recorder = &MockLuciRPCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLuciRPC) EXPECT() *MockLuciRPCMockRecorder {
	return m.recorder
}

// Uci mocks base method.
func (m *MockLuciRPC) Uci(arg0 context.Context, arg1 string, arg2 []string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Uci", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Uci indicates an expected call of Uci.
func (mr *MockLuciRPCMockRecorder) Uci(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Uci", reflect.TypeOf((*MockLuciRPC)(nil).Uci), arg0, arg1, arg2)
}
